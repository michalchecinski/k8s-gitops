apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: grafana
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.48.2
    helm:
      releaseName: grafana
      values: |
        podAnnotations:
          configmap.reloader.stakater.com/reload: "grafana"
        persistence:
          enabled: true
          storageClassName: "longhorn"
          size: 500Mi
          accessModes:
          - ReadWriteOnce
        ingress:
          enabled: true
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt
            kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: 'true'
          hosts: [grafana.checinski.xyz]
          tls:
            - hosts:
              - grafana.checinski.xyz
              secretName: grafana-checinski-xyz-tls
        serviceMonitor:
          enabled: true
        serviceAccount:
          autoMount: true
        dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              allowUiUpdates: true
              options:
                path: /var/lib/grafana/dashboards/default
            - name: 'teslamate'
              orgId: 1
              folder: Teslamate
              type: file
              disableDeletion: false
              # updateIntervalSeconds: -1
              allowUiUpdates: true
              options:
                path: /var/lib/grafana/dashboards/teslamate
        dashboards:
          default:
            1-node-exporter:
              url: https://grafana.com/api/dashboards/11074/revisions/9/download
              datasource: Prometheus
        sidecar:
          datasources:
            enabled: true
            searchNamespace: ALL
            # defaultDatasourceEnabled: false
          dashboards:
            enabled: true
            searchNamespace: ALL
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://thanos-query:9090/
              isDefault: true
            - name: loki
              type: loki
              access: proxy
              url: http://loki.logs.svc.cluster.local:3100
        grafana.ini:
          server:
            root_url: "https://grafana.checinski.xyz"
          # security:
          #   admin_user: jeff@billimek.com
          paths:
            data: /var/lib/grafana/data
            logs: /var/log/grafana
            plugins: /var/lib/grafana/plugins
            provisioning: /etc/grafana/provisioning
          analytics:
            check_for_updates: false
          log:
            mode: console
          grafana_net:
            url: https://grafana.net
  destination:
    server: "https://kubernetes.default.svc"
    namespace: grafana
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
